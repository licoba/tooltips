apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

task generateSourcesJar(type: Jar){
    from android.sourceSets.main.java.srcDirs
    classifier  'sources'
}

afterEvaluate {
    publishing {
        def versionName = "1.3.3" // 当前版本依赖库版本号，这个jitpack不会使用到，只是我们开发者自己查看
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release // 表示发布 release（jitpack 都不会使用到）

                // You can then customize attributes of the publication as shown below.
                groupId = 'com.github.licoba' // 这个是依赖库的组 id
                artifactId = 'tooltip' // 依赖库的名称（jitpack 都不会使用到）
                version = versionName
            }
        }
        repositories {
            // 下面这部分，不是很清楚加不加，但是最后加上
            maven {
                // change URLs to point to your repos, e.g. http://my.org/repo
                def baseUrl = buildDir.getParent()
                def releasesRepoUrl = "$baseUrl/repos/releases"
                def snapshotsRepoUrl = "$baseUrl/repos/snapshots"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}

File localPropsFile = project.rootProject.file('local.properties')
if (localPropsFile.exists()) {
    // Read local.properties file first if it exists
    def localProps = new Properties()
    new FileInputStream(localPropsFile).withCloseable { is -> localProps.load(is) }
    localProps.each { name, value -> ext[name] = value }
}

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 31
        versionCode 14
        versionName "1.1.1"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    publishing {
        repositories {
            maven {
                def releasesRepoUrl = "$buildDir/repos/releases"
                def snapshotsRepoUrl = "$buildDir/repos/snapshots"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.13.2'
    implementation 'androidx.appcompat:appcompat:1.4.0'
}